const incrementalMD5=e=>new Promise(((a,n)=>{var r=0,s=(performance.now(),e.size);const t=new FileReader,o=new SparkMD5.ArrayBuffer,l=2097152,i=Math.ceil(e.size/l);let d=0;t.onload=e=>{o.append(e.target.result),++d,d<i?c():a(o.end())},t.addEventListener("progress",(e=>{r+=e.loaded,Math.round(r/s*100)})),t.addEventListener("loadend",(e=>{e.total>0&&performance.now()})),t.onerror=()=>n(t.error);const c=()=>{const a=d*l,n=a+l>=e.size?e.size:a+l;t.readAsArrayBuffer(File.prototype.slice.call(e,a,n))};c()}));self.onmessage=async function(e){if(e.data.file&&"begin hash"==e.data.msg){const a=await incrementalMD5(e.data.file);postMessage({status:"complete",hash:a}),self.close()}};